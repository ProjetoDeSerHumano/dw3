{% extends "templates/base.html" %}

{% block content %}
  <div x-data="transacaoForm()">
    <ol class="breadcrumb mb-2">
      <li class="breadcrumb-item active">{{title}}</li>
    </ol>
    <div class="row">
      <div class="col-12">

        <div class="card-header">
          {{title}}
        </div>

        <div class="card-body">
          <div class="">

            <form>
              {# Campo ID Oculto para UPDATE/DELETE #}
              <input type="hidden" x-model="form.idtransacoes">

              <div class="row">
                {# Campo: DESCRICAO #}
                <div class="col-md-6">
                  <div class="form-group">
                    <label for="descricao">Descrição da Transação</label>
                    <input type="text" class="form-control" id="descricao" required="required" x-model="form.descricao" x-bind:disabled="disabled">
                  </div>
                </div>

                {# Campo: VALOR (Decimal) #}
                <div class="col-md-3">
                  <div class="form-group">
                    <label for="valor">Valor (R$)</label>
                    <input type="number" step="0.01" class="form-control" id="valor" x-model="form.valor" x-bind:disabled="disabled">
                  </div>
                </div>

                {# Campo: DATA_TRANSACAO (Data) #}
                <div class="col-md-3">
                  <div class="form-group">
                    <label for="data_transacao">Data da Transação</label>
                    <input type="date" class="form-control" id="data_transacao" x-model="form.data_transacao" x-bind:disabled="disabled">
                  </div>
                </div>
              </div>
              
              <div class="row">
                {# Campo: TIPO_OPERACAO (Texto) #}
                <div class="col-md-3">
                  <div class="form-group">
                    <label for="tipo_operacao">Tipo de Operação</label>
                    <select class="form-select" id="tipo_operacao" x-model="form.tipo_operacao" x-bind:disabled="disabled" required="required">
                        <option value="">Selecione...</option>
                        <option value="Credito">Crédito (Entrada)</option>
                        <option value="Debito">Débito (Saída)</option>
                    </select>
                  </div>
                </div>

                {# Campo: ID_CONTA (Relacionamento 1:N) #}
                <div class="col-md-9">
                  <div class="form-group">
                    <label for="id_conta">Conta Corrente (Banco)</label>
                    <select class="form-select" aria-label="Default select example" id="id_conta" x-model="form.id_conta" x-bind:disabled="disabled" name="id_conta">
                      {# Loop para popular o dropdown com as contas (antigo curso) #}
                      {% for reg in conta %}
                        {# Se o id_conta da transação for igual ao idconta do registro, marca como selecionado #}
                        <option value="{{reg.idconta}}" {% if data.id_conta == reg.idconta %}selected{% endif %}>
                            {{reg.nome_banco}} - Ag: {{reg.numero_agencia}} - C/C: {{reg.numero_conta}}
                        </option>
                      {%endfor%}
                    </select>
                  </div>
                </div>
              </div>

              {# Botões de Ação #}
              <button type="button" @click="updateForm()" class="btn btn-primary mt-4" x-show="!disabled">Atualizar</button>
              <button type="button" @click="deleteForm()" x-show="!disabled" class="btn btn-danger mt-4">Deletar (Soft Delete)</button>
              <a href="/transacoes/manutTransacoes" class="btn btn-info mt-4 ml-2" role="button" aria-disabled="true">Retornar</a>
            </form>

            <div class="mt-3">
              <template x-if="message">
                <div :class="messageClass" x-text="message"></div>
              </template>
            </div>
          </div>

        </div>
      </div>
    </div>
  </div>

  <script>

    window.onload = function () {
      windowOnLoad();

      const localErro = "{{erro}}";
      if (localErro != "") {
        alert("[vwTransacoes|onload]Servidor retornou o erro:" + localErro);
      }
      $("#descricao").focus(); // Foco no primeiro campo
    };

    function transacaoForm() {
      return {
        form: {
          // IDs e campos da Transação
          idtransacoes: "{{data.idtransacoes}}",
          descricao: "{{data.descricao}}",
          valor: "{{data.valor}}",
          data_transacao: "{{data.data_transacao}}",
          tipo_operacao: "{{data.tipo_operacao}}",
          id_conta: "{{data.id_conta}}", // Chave estrangeira
          deleted: false
        },
        message: '',
        messageClass: '',
        disabled: {{disabled}}, // Variável para controlar se o form é só leitura

        async updateForm() {
          try {
            
            const response = await fetch('/transacoes/UpdateTransacoes', { // Rota ajustada
              method: 'POST',
              headers: {
                "Content-Type": "application/json"
              },
              body: JSON.stringify(this.form)
            });

            const result = await response.json();
            if (result.status == "ok") {
              alert("Transação atualizada com sucesso");
              // Opcional: Recarregar a página para mostrar novos dados se necessário
              // window.location.reload(); 
            } else {
              const errorData = result.status;
              this.message = `Erro! Não foi possível atualizar os dados da transação devido ao erro: ${errorData}`;
              this.messageClass = 'alert alert-danger';
            }
          } catch (error) {
            this.message = `Erro de conexão: ${error.message}`;
            this.messageClass = 'alert alert-danger';
          }
        },

        async deleteForm() {
          if (!confirm("Tem certeza que deseja DELETAR esta transação (Soft Delete)?")) {
              return;
          }
          try {
              // Note: Você pode querer enviar apenas o ID aqui, mas enviando o form completo também funciona.
              const response = await fetch('/transacoes/DeleteTransacoes', { // Rota ajustada
                method: 'POST',
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify(this.form)
              });

              const result = await response.json();
              if (result.status == "ok") {
                alert("Transação deletada com sucesso");
                // Redireciona para a página de manutenção/listagem após o delete
                window.location.href = "/transacoes/manutTransacoes"; // Rota ajustada

              } else {
                const errorData = result.status;
                this.message = `Erro! Não foi possível deletar a transação devido ao erro: ${errorData}`;
                this.messageClass = 'alert alert-danger';
              }

          } catch (error) {
            this.message = `Erro de conexão: ${error.message}`;
            this.messageClass = 'alert alert-danger';
          }
        },

        resetForm() { /* Não é necessário neste contexto FRUD, mas mantido por completude */ }
      };
    }
  </script>

{% endblock %}